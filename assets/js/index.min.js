function init(){$(document).ready(function(){$("header .burger_wrapper").click(function(){let e=$(this);$(this).hasClass("active")?($(this).parents("header").find(".navmenu").slideUp(300),$(this).parents("header").removeClass("open"),$(this).parents("body").removeClass("lock"),setTimeout(function(){e.removeClass("active")},300)):($(this).parents("header").find(".navmenu").slideDown(300),$(this).parents("header").addClass("open"),$(this).parents("body").addClass("lock"),setTimeout(function(){e.addClass("active")},300))}),$(".acord .acord_title").click(function(){let e=$(this);$(this).hasClass("active")?($(this).parents(".acord").find(".acord_body").slideUp(300),$(this).parents(".acord").removeClass("open"),setTimeout(function(){e.removeClass("active")},300)):($(this).parents(".acord").find(".acord_body").slideDown(300),$(this).parents(".acord").addClass("open"),setTimeout(function(){e.addClass("active")},300))});let e=document.querySelector(".privacy-popup__bg"),t=document.querySelector(".privacy-popup"),s=document.querySelectorAll(".open-privacy-popup"),i=document.querySelector(".close-popup"),a=document.querySelector(".check-popup");s.forEach(s=>{s.addEventListener("click",s=>{s.preventDefault(),e.classList.add("active"),t.classList.add("active")})}),i.addEventListener("click",()=>{e.classList.remove("active"),t.classList.remove("active")}),a.addEventListener("click",()=>{e.classList.remove("active"),t.classList.remove("active")}),document.addEventListener("click",s=>{s.target===e&&(e.classList.remove("active"),t.classList.remove("active"))}),$(".reviews_slider").slick({dots:!1,arrows:!1,infinite:!0,slidesToShow:4,slidesToScroll:1,adaptiveHeight:!0,responsive:[{breakpoint:1200,settings:{slidesToShow:2}},{breakpoint:1020,settings:{slidesToShow:1,centerMode:!0}}]})})}window.addEventListener("DOMContentLoaded",init);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
